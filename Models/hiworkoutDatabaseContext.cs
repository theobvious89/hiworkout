#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace hiworkout.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
using System.IO;
using System.IO.IsolatedStorage;
using Microsoft.Phone.Data.Linq.Mapping;
using Microsoft.Phone.Data.Linq;


public class DebugWriter : TextWriter
{
    private const int DefaultBufferSize = 256;
    private System.Text.StringBuilder _buffer;

    public DebugWriter()
    {
        BufferSize = 256;
        _buffer = new System.Text.StringBuilder(BufferSize);
    }

    public int BufferSize
    {
        get;
        private set;
    }

    public override System.Text.Encoding Encoding
    {
        get { return System.Text.Encoding.UTF8; }
    }

    #region StreamWriter Overrides
    public override void Write(char value)
    {
        _buffer.Append(value);
        if (_buffer.Length >= BufferSize)
            Flush();
    }

    public override void WriteLine(string value)
    {
        Flush();

        using(var reader = new StringReader(value))
        {
            string line; 
            while( null != (line = reader.ReadLine()))
                System.Diagnostics.Debug.WriteLine(line);
        }
    }

    protected override void Dispose(bool disposing)
    {
        if (disposing)
            Flush();
    }

    public override void Flush()
    {
        if (_buffer.Length > 0)
        {
            System.Diagnostics.Debug.WriteLine(_buffer);
            _buffer.Clear();
        }
    }
    #endregion
}


	public partial class hiworkoutDatabaseContext : System.Data.Linq.DataContext
	{
		
		public bool CreateIfNotExists()
		{
			bool created = false;
			if (!this.DatabaseExists())
			{
				string[] names = this.GetType().Assembly.GetManifestResourceNames();
				string name = names.Where(n => n.EndsWith(FileName)).FirstOrDefault();
				if (name != null)
				{
					using (Stream resourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(name))
					{
						if (resourceStream != null)
						{
							using (IsolatedStorageFile myIsolatedStorage = IsolatedStorageFile.GetUserStoreForApplication())
							{
								using (IsolatedStorageFileStream fileStream = new IsolatedStorageFileStream(FileName, FileMode.Create, myIsolatedStorage))
								{
									using (BinaryWriter writer = new BinaryWriter(fileStream))
									{
										long length = resourceStream.Length;
										byte[] buffer = new byte[32];
										int readCount = 0;
										using (BinaryReader reader = new BinaryReader(resourceStream))
										{
											// read file in chunks in order to reduce memory consumption and increase performance
											while (readCount < length)
											{
												int actual = reader.Read(buffer, 0, buffer.Length);
												readCount += actual;
												writer.Write(buffer, 0, actual);
											}
										}
									}
								}
							}
							created = true;
						}
						else
						{
							this.CreateDatabase();
							created = true;
						}
					}
				}
				else
				{
					this.CreateDatabase();
					created = true;
				}
			}
			return created;
		}
		
		public bool LogDebug
		{
			set
			{
				if (value)
				{
					this.Log = new DebugWriter();
				}
			}
		}
		
		public static string ConnectionString = "Data Source=isostore:/hiworkoutDatabase.sdf";

		public static string ConnectionStringReadOnly = "Data Source=appdata:/hiworkoutDatabase.sdf;File Mode=Read Only;";

		public static string FileName = "hiworkoutDatabase.sdf";

		public hiworkoutDatabaseContext(string connectionString) : base(connectionString)
		{
			OnCreated();
		}
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertExercise(Exercise instance);
    partial void UpdateExercise(Exercise instance);
    partial void DeleteExercise(Exercise instance);
    partial void InsertWorkout(Workout instance);
    partial void UpdateWorkout(Workout instance);
    partial void DeleteWorkout(Workout instance);
    partial void InsertWorkoutResult(WorkoutResult instance);
    partial void UpdateWorkoutResult(WorkoutResult instance);
    partial void DeleteWorkoutResult(WorkoutResult instance);
    partial void InsertWorkoutTemplate(WorkoutTemplate instance);
    partial void UpdateWorkoutTemplate(WorkoutTemplate instance);
    partial void DeleteWorkoutTemplate(WorkoutTemplate instance);
    #endregion
		
		public System.Data.Linq.Table<Exercise> Exercise
		{
			get
			{
				return this.GetTable<Exercise>();
			}
		}
		
		public System.Data.Linq.Table<Workout> Workout
		{
			get
			{
				return this.GetTable<Workout>();
			}
		}
		
		public System.Data.Linq.Table<WorkoutResult> WorkoutResult
		{
			get
			{
				return this.GetTable<WorkoutResult>();
			}
		}
		
		public System.Data.Linq.Table<WorkoutTemplate> WorkoutTemplate
		{
			get
			{
				return this.GetTable<WorkoutTemplate>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Exercise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _Type;
		
		private EntitySet<WorkoutResult> _WorkoutResult;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public Exercise()
		{
			this._WorkoutResult = new EntitySet<WorkoutResult>(new Action<WorkoutResult>(this.attach_WorkoutResult), new Action<WorkoutResult>(this.detach_WorkoutResult));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(150)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Runtime.Serialization.IgnoreDataMember]
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkoutResult_Exercise", Storage="_WorkoutResult", ThisKey="ID", OtherKey="ExerciseID", DeleteRule="NO ACTION")]
		public EntitySet<WorkoutResult> WorkoutResult
		{
			get
			{
				return this._WorkoutResult;
			}
			set
			{
				this._WorkoutResult.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkoutResult(WorkoutResult entity)
		{
			this.SendPropertyChanging();
			entity.Exercise = this;
		}
		
		private void detach_WorkoutResult(WorkoutResult entity)
		{
			this.SendPropertyChanging();
			entity.Exercise = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Workout : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.DateTime _DateTimeOfWorkout;
		
		private System.DateTime _LengthOfWorkout;
		
		private long _WorkoutTempleteID;
		
		private EntityRef<WorkoutTemplate> _WorkoutTemplate;
		
		private EntitySet<WorkoutResult> _WorkoutResult;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDateTimeOfWorkoutChanging(System.DateTime value);
    partial void OnDateTimeOfWorkoutChanged();
    partial void OnLengthOfWorkoutChanging(System.DateTime value);
    partial void OnLengthOfWorkoutChanged();
    partial void OnWorkoutTempleteIDChanging(long value);
    partial void OnWorkoutTempleteIDChanged();
    #endregion
		
		public Workout()
		{
			this._WorkoutTemplate = default(EntityRef<WorkoutTemplate>);
			this._WorkoutResult = new EntitySet<WorkoutResult>(new Action<WorkoutResult>(this.attach_WorkoutResult), new Action<WorkoutResult>(this.detach_WorkoutResult));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeOfWorkout", DbType="DateTime NOT NULL")]
		public System.DateTime DateTimeOfWorkout
		{
			get
			{
				return this._DateTimeOfWorkout;
			}
			set
			{
				if ((this._DateTimeOfWorkout != value))
				{
					this.OnDateTimeOfWorkoutChanging(value);
					this.SendPropertyChanging();
					this._DateTimeOfWorkout = value;
					this.SendPropertyChanged("DateTimeOfWorkout");
					this.OnDateTimeOfWorkoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthOfWorkout", DbType="DateTime NOT NULL")]
		public System.DateTime LengthOfWorkout
		{
			get
			{
				return this._LengthOfWorkout;
			}
			set
			{
				if ((this._LengthOfWorkout != value))
				{
					this.OnLengthOfWorkoutChanging(value);
					this.SendPropertyChanging();
					this._LengthOfWorkout = value;
					this.SendPropertyChanged("LengthOfWorkout");
					this.OnLengthOfWorkoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkoutTempleteID", DbType="BigInt NOT NULL")]
		public long WorkoutTempleteID
		{
			get
			{
				return this._WorkoutTempleteID;
			}
			set
			{
				if ((this._WorkoutTempleteID != value))
				{
					if (this._WorkoutTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkoutTempleteIDChanging(value);
					this.SendPropertyChanging();
					this._WorkoutTempleteID = value;
					this.SendPropertyChanged("WorkoutTempleteID");
					this.OnWorkoutTempleteIDChanged();
				}
			}
		}
		
		[global::System.Runtime.Serialization.IgnoreDataMember]
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Workout_WorkoutTemplate", Storage="_WorkoutTemplate", ThisKey="WorkoutTempleteID", OtherKey="ID", IsForeignKey=true)]
		public WorkoutTemplate WorkoutTemplate
		{
			get
			{
				return this._WorkoutTemplate.Entity;
			}
			set
			{
				WorkoutTemplate previousValue = this._WorkoutTemplate.Entity;
				if (((previousValue != value) 
							|| (this._WorkoutTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkoutTemplate.Entity = null;
						previousValue.Workout.Remove(this);
					}
					this._WorkoutTemplate.Entity = value;
					if ((value != null))
					{
						value.Workout.Add(this);
						this._WorkoutTempleteID = value.ID;
					}
					else
					{
						this._WorkoutTempleteID = default(long);
					}
					this.SendPropertyChanged("WorkoutTemplate");
				}
			}
		}
		
		[global::System.Runtime.Serialization.IgnoreDataMember]
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkoutResult_Workout", Storage="_WorkoutResult", ThisKey="ID", OtherKey="WorkoutID", DeleteRule="NO ACTION")]
		public EntitySet<WorkoutResult> WorkoutResult
		{
			get
			{
				return this._WorkoutResult;
			}
			set
			{
				this._WorkoutResult.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkoutResult(WorkoutResult entity)
		{
			this.SendPropertyChanging();
			entity.Workout = this;
		}
		
		private void detach_WorkoutResult(WorkoutResult entity)
		{
			this.SendPropertyChanging();
			entity.Workout = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class WorkoutResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ExerciseID;
		
		private long _WorkoutID;
		
		private int _Weight;
		
		private int _WeightUnit;
		
		private int _Reps;
		
		private System.DateTime _TimeUnderLoad;
		
		private EntityRef<Exercise> _Exercise;
		
		private EntityRef<Workout> _Workout;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExerciseIDChanging(long value);
    partial void OnExerciseIDChanged();
    partial void OnWorkoutIDChanging(long value);
    partial void OnWorkoutIDChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnWeightUnitChanging(int value);
    partial void OnWeightUnitChanged();
    partial void OnRepsChanging(int value);
    partial void OnRepsChanged();
    partial void OnTimeUnderLoadChanging(System.DateTime value);
    partial void OnTimeUnderLoadChanged();
    #endregion
		
		public WorkoutResult()
		{
			this._Exercise = default(EntityRef<Exercise>);
			this._Workout = default(EntityRef<Workout>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ExerciseID
		{
			get
			{
				return this._ExerciseID;
			}
			set
			{
				if ((this._ExerciseID != value))
				{
					if (this._Exercise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExerciseIDChanging(value);
					this.SendPropertyChanging();
					this._ExerciseID = value;
					this.SendPropertyChanged("ExerciseID");
					this.OnExerciseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkoutID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WorkoutID
		{
			get
			{
				return this._WorkoutID;
			}
			set
			{
				if ((this._WorkoutID != value))
				{
					if (this._Workout.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkoutIDChanging(value);
					this.SendPropertyChanging();
					this._WorkoutID = value;
					this.SendPropertyChanged("WorkoutID");
					this.OnWorkoutIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int NOT NULL")]
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightUnit", DbType="Int NOT NULL")]
		public int WeightUnit
		{
			get
			{
				return this._WeightUnit;
			}
			set
			{
				if ((this._WeightUnit != value))
				{
					this.OnWeightUnitChanging(value);
					this.SendPropertyChanging();
					this._WeightUnit = value;
					this.SendPropertyChanged("WeightUnit");
					this.OnWeightUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reps", DbType="Int NOT NULL")]
		public int Reps
		{
			get
			{
				return this._Reps;
			}
			set
			{
				if ((this._Reps != value))
				{
					this.OnRepsChanging(value);
					this.SendPropertyChanging();
					this._Reps = value;
					this.SendPropertyChanged("Reps");
					this.OnRepsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeUnderLoad", DbType="DateTime NOT NULL")]
		public System.DateTime TimeUnderLoad
		{
			get
			{
				return this._TimeUnderLoad;
			}
			set
			{
				if ((this._TimeUnderLoad != value))
				{
					this.OnTimeUnderLoadChanging(value);
					this.SendPropertyChanging();
					this._TimeUnderLoad = value;
					this.SendPropertyChanged("TimeUnderLoad");
					this.OnTimeUnderLoadChanged();
				}
			}
		}
		
		[global::System.Runtime.Serialization.IgnoreDataMember]
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkoutResult_Exercise", Storage="_Exercise", ThisKey="ExerciseID", OtherKey="ID", IsForeignKey=true)]
		public Exercise Exercise
		{
			get
			{
				return this._Exercise.Entity;
			}
			set
			{
				Exercise previousValue = this._Exercise.Entity;
				if (((previousValue != value) 
							|| (this._Exercise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exercise.Entity = null;
						previousValue.WorkoutResult.Remove(this);
					}
					this._Exercise.Entity = value;
					if ((value != null))
					{
						value.WorkoutResult.Add(this);
						this._ExerciseID = value.ID;
					}
					else
					{
						this._ExerciseID = default(long);
					}
					this.SendPropertyChanged("Exercise");
				}
			}
		}
		
		[global::System.Runtime.Serialization.IgnoreDataMember]
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WorkoutResult_Workout", Storage="_Workout", ThisKey="WorkoutID", OtherKey="ID", IsForeignKey=true)]
		public Workout Workout
		{
			get
			{
				return this._Workout.Entity;
			}
			set
			{
				Workout previousValue = this._Workout.Entity;
				if (((previousValue != value) 
							|| (this._Workout.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Workout.Entity = null;
						previousValue.WorkoutResult.Remove(this);
					}
					this._Workout.Entity = value;
					if ((value != null))
					{
						value.WorkoutResult.Add(this);
						this._WorkoutID = value.ID;
					}
					else
					{
						this._WorkoutID = default(long);
					}
					this.SendPropertyChanged("Workout");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class WorkoutTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _ListOfExercises;
		
		private EntitySet<Workout> _Workout;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnListOfExercisesChanging(string value);
    partial void OnListOfExercisesChanged();
    #endregion
		
		public WorkoutTemplate()
		{
			this._Workout = new EntitySet<Workout>(new Action<Workout>(this.attach_Workout), new Action<Workout>(this.detach_Workout));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListOfExercises", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ListOfExercises
		{
			get
			{
				return this._ListOfExercises;
			}
			set
			{
				if ((this._ListOfExercises != value))
				{
					this.OnListOfExercisesChanging(value);
					this.SendPropertyChanging();
					this._ListOfExercises = value;
					this.SendPropertyChanged("ListOfExercises");
					this.OnListOfExercisesChanged();
				}
			}
		}
		
		[global::System.Runtime.Serialization.IgnoreDataMember]
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Workout_WorkoutTemplate", Storage="_Workout", ThisKey="ID", OtherKey="WorkoutTempleteID", DeleteRule="NO ACTION")]
		public EntitySet<Workout> Workout
		{
			get
			{
				return this._Workout;
			}
			set
			{
				this._Workout.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Workout(Workout entity)
		{
			this.SendPropertyChanging();
			entity.WorkoutTemplate = this;
		}
		
		private void detach_Workout(Workout entity)
		{
			this.SendPropertyChanging();
			entity.WorkoutTemplate = null;
		}
	}
}
#pragma warning restore 1591
